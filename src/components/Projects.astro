---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Django from "./icons/Django.astro"
import Python from "./icons/Python.astro"
import AWS from "./icons/AWS.astro"
import NodeJS from "./icons/NodeJs.astro"
import ReactJS from "./icons/ReactJs.astro"
import MongoDB from "./icons/MongoDB.astro"
import MYSQL from "./icons/MYSQL.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind",
   class: "bg-[#fff] text-black",
    icon: Tailwind,
  },
  DJANGO: {
    name: "Django",
    class: "bg-[#fff] text-black",
    icon: Django,
  },
  PYTHON: {
    name: "Python",
    class: "bg-[#fff] text-black",
    icon: Python,
  },
  AWS: {
    name: "AWS",
    class: "bg-[#fff] text-black",
    icon: AWS,
  },
  NODEJS: {
    name: "NodeJS",
    class: "bg-[#fff] text-black",
    icon: NodeJS,
  },
  REACTJS: {
    name: "ReactJS",
    class: "bg-[#fff] text-black",
    icon: ReactJS,
  },
  MONGODB: {
    name: "MongoDB",
    class: "bg-[#fff] text-black",
    icon: MongoDB,
  },
  MYSQL: {
    name: "MYSQL",
    class: "bg-[#fff] text-black",
    icon: MYSQL,
  }
}
const PROJECTS = [
  {
    title: "RoboInk: Automated 3D Card Printing System",
    description: "RoboInk is an automated 3D card printing system that streamlines personalized print jobs for e-commerce, reducing manual effort by 90%. It leverages Django and AWS to convert SVG designs to G-code, ensuring reliable, end-to-end automation from order to printer.",
    link: "https://roboink.de/",
    github: "https://github.com/ahmedazhar2299/",
    image: "/projects/Roboink.webp",
    tags: [TAGS.PYTHON, TAGS.DJANGO,  TAGS.AWS, TAGS.MYSQL],
  },
  {
    title: "Artsy: Real-Time Art Auction Platform",
    description:
      "Artsy is a real-time digital art auction platform enabling live bidding and secure payments, enhancing user engagement and trust. Built with NodeJS, ReactJS, and WebSockets, it ensures low-latency, scalable auctions with seamless concurrent bidding.",
    link: "https://artsy-delta.vercel.app/signin",
    github: "https://github.com/MusaMalikx/Artsy",
    image: "/projects/Artsy.webp",
    tags: [TAGS.REACTJS, TAGS.TAILWIND, TAGS.NODEJS, TAGS.MONGODB, TAGS.MYSQL],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-wrap flex-row mb-2 gap-x-2 gap-y-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



